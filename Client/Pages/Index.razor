@page "/"
@using BlazorMovies.Client.Helpers

<p>Hello, @StringUtilities.CustomToUpper(name)</p>
<p>Let's add 2 + 2 = @(2+2)</p>

<button @onclick="@(() => Console.WriteLine("1: I've been clicked!"))">Click me</button>
<button @onclick="@WriteInLog">Click me</button>

<div>
    <h3>Movie</h3>
    @if (movies == null)
    {
        <text>Loading...</text>

    }
    else
    {
        @foreach (var movie in movies)
        {
            <p>Title: <b>@((MarkupString)movie.Title)</b></p>
            <p>Release Date: <b>@movie.ReleaseDate.ToString("dd MM yyyy")</b></p>
        }
        @for (int i = 0; i < movies.Count; i++)
        {
            <div style="background-color: @(i%2 ==0 ? "blue" : "red" )">
                <p>Title: <b>@(i+1)) @movies[i].Title</b></p>
                <p>Release Date: <b>@movies[i].ReleaseDate.ToString("dd MM yyyy")</b></p>
            </div>
        }
    }
</div>

@code{
    string name = "Jim";

    List<Movie> movies;

    protected async override Task OnInitializedAsync()
    {
        await Task.Delay(3000);
        movies = new List<Movie>()
        {
            new Movie() {Title = "<b>Spider-Man: Far From Home</b>", ReleaseDate = new DateTime(2019, 7, 2)},
            new Movie() {Title = "<i>Moana</i>", ReleaseDate = new DateTime(2016, 11, 23)},
            new Movie() {Title = "Inception", ReleaseDate = new DateTime(2010, 7, 16)}
        };

    }

    Movie spiderman = new Movie
    {
        Title = "Spider-Man: Far From Home",
        ReleaseDate = new DateTime(2019, 7, 2)
    };

    void WriteInLog()
    {
        Console.WriteLine("I've been clicked! (from method)");
    }


}